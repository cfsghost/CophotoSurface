extends layout

block body
	script.
		$(function() {
			var updatedTime = '';

			function poll() {
				$.ajax({
					url: '/events/' + updatedTime,
					type: 'get',
					timeout: 120000,
					complete: poll,
					success: function(data) {
						updatedTime = data.ts;
						console.log(data);
						if (!data.photos)
							return;

						async.eachSeries(data.photos, function(item, next) {
							addPhoto(item.id, next);
						});
					}
				});
			}

			function addPhoto(id, callback) {
				var deg = Math.floor(Math.random() * 50) - 25;
				var $frame = $('<div>')
					.addClass('frame')
					.css({
						'transform': 'scale(1.0)',
						left: 0,
						top: 0,
						width: '100%',
						height: '100%'
					})
					.hide();
				var $photo = $('<div>')
					.addClass('photo');
				var $img = $('<img>')
					.addClass('photo-image')
					.load(function() {
						var self = this;

						if (self.height <= self.width) {
							$photo.css({
								width: '480px'
							});
						}
						
						$frame.show(function() {

							setTimeout(function() {
								var rangeL = Math.floor(Math.random() * ($(window).width() - self.width));
								var rangeT = Math.floor(Math.random() * ($(window).height() - self.height));
								var left = (rangeL - ($(window).width() + self.width) * 0.5);
								left += rangeL * 0.6;
								var top = rangeT;

								if (self.height > self.width) {
									$frame.css({
										'transform': 'rotate(' + deg + 'deg) scale(0.7) translate(' + left + 'px,' + top + 'px)'
									});
								} else {
									$frame.css({
										'transform': 'rotate(' + deg + 'deg) scale(0.7) translate(' + left + 'px,' + top + 'px)'
									});
								}
							}, 3000);

							setTimeout(function() {
								callback();
							}, 0);
						});
					})
					.attr('src', '/photo/' + id);
				$photo.append($img);
				$frame.append($photo);
				$('#surface').append($frame);
			}

			poll();
		});

	div#surface
